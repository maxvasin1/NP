#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Товары.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Денежные средства
	Если Оплачено>0 Тогда
		ТаблицаДС = СоздатьТаблицуДенежныхСредств();
		СформироватьДвиженияПоРегистру(ТаблицаДС, Отказ, "ДенежныеСредства", , "Приход");
	КонецЕсли;
	
	//Взаиморасчеты
	ТаблицаВзаиморасчетов = СоздатьТаблицуДолгаПоДокументам();
	СформироватьДвиженияПоРегистру(ТаблицаВзаиморасчетов, Отказ, "Взаиморасчеты", Истина);
	
	Если Оплачено>0 Тогда
		ТаблицаОплат		  = СоздатьТаблицуОплатПоДокументам();
		СформироватьДвиженияПоРегистру(ТаблицаОплат, Отказ, "Взаиморасчеты", , "Расход");
	КонецЕсли;
	//Товары
	ДвиженияПоРегистрам(Отказ);
	
	//Продажи
	ТаблицаТоваров = СоздатьТаблицуПродажТоваров();
	СформироватьДвиженияПоРегистру(ТаблицаТоваров, Отказ, "Продажи", , "Обороты");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьТаблицуДенежныхСредств()
	
	КвалификаторыЧисла = Новый КвалификаторыЧисла(10, 2, ДопустимыйЗнак.Любой);
	ОписаниеЧисла = Новый ОписаниеТипов("Число", КвалификаторыЧисла);
	
	ТаблицаДвижений = Движения.ДенежныеСредства.Выгрузить();
	НовСтр = ТаблицаДвижений.Добавить();
	
	НовСтр.Сумма = Оплачено;
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Процедура СформироватьДвиженияПоРегистру(Таблица, Отказ, ИмяРегистра, ПромежуточноЗаписать=Ложь, ВидДвижения = "Приход")

	// ПО РЕГИСТРУ Взаиморасчеты.
	
	НаборДвижений = Движения[ИмяРегистра];
	НаборДвижений.Записывать = Истина;
	
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	// Заполним таблицу движений.
	ОбщегоНазначенияНП.ЗагрузитьВТаблицуЗначений(Таблица, ТаблицаДвижений);
	
	// Недостающие поля.
	НаборДвижений.мПериод            = Дата;
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
	
	Если Не Отказ Тогда
		
		Если ВидДвижения = "Приход" Тогда
			НаборДвижений.ВыполнитьПриход();
		ИначеЕсли ВидДвижения = "Обороты" Тогда
			НаборДвижений.ВыполнитьДвижения();
		Иначе
			НаборДвижений.ВыполнитьРасход();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПромежуточноЗаписать ТОгда
		НаборДвижений.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ) Экспорт
	
	СтруктураДокумента = Новый Структура("Склад,ВидОперации");
	ЗаполнитьЗначенияСвойств(СтруктураДокумента,ЭтотОбъект);
	СтруктураДокумента.ВидОперации = "Реализация";
	
	ТаблицаПоТоварам   = Товары.Выгрузить();
	ТаблицаПоТоварам.Свернуть("Номенклатура","Количество");
	
	СтруктураДокумента.Вставить("ТаблицаПоТоварам", ТаблицаПоТоварам);
	
	ДобавленныеФункции.ВыполнитьДвиженияПоПартиямТоваров(Ссылка,СтруктураДокумента, Отказ, Движения.ТоварыНаСкладах);
	
КонецПроцедуры

Функция СоздатьТаблицуДолгаПоДокументам()
	
	ТаблицаВзаиморасчетов = Новый ТаблицаЗначений;
	ТаблицаВзаиморасчетов.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаВзаиморасчетов.Колонки.Добавить("Стоимость", ДобавленныеФункции.ПолучитьОписаниеТиповЧисла(10,2));
	НовСтр = ТаблицаВзаиморасчетов.Добавить();
	НовСтр.Контрагент = Контрагент;
	НовСтр.Стоимость = Товары.Итог("Сумма");
	
	ТаблицаДвижений = Движения.Взаиморасчеты.Выгрузить();
	Для Каждого ТекСтрока Из ТаблицаВзаиморасчетов Цикл
		НовСтр = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ТекСтрока);
		НовСтр.СуммаВзаиморасчетов = ТекСтрока.Стоимость;
	КонецЦикла;
	
	НовТаблицаДвижений = ДобавленныеФункции.РаспределитьОплатуПоРасчетнымДокументам(Ссылка, ТаблицаДвижений, Ложь);
	
	Возврат НовТаблицаДвижений;
	
КонецФункции

Функция СоздатьТаблицуОплатПоДокументам()
	
	ТаблицаВзаиморасчетов = Новый ТаблицаЗначений;
	ТаблицаВзаиморасчетов.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаВзаиморасчетов.Колонки.Добавить("Оплачено", ДобавленныеФункции.ПолучитьОписаниеТиповЧисла(10,2));
	НовСтр = ТаблицаВзаиморасчетов.Добавить();
	НовСтр.Контрагент = Контрагент;
	НовСтр.Оплачено = Оплачено;
	
	ТаблицаДвижений = Движения.Взаиморасчеты.Выгрузить();
	ТаблицаДвижений.Очистить();
	Для Каждого ТекСтрока Из ТаблицаВзаиморасчетов Цикл
		НовСтр = ТаблицаДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ТекСтрока);
		НовСтр.СуммаВзаиморасчетов = ТекСтрока.Оплачено;
	КонецЦикла;
	
	НовТаблицаДвижений = ДобавленныеФункции.РаспределитьОплатуПоРасчетнымДокументам(Ссылка, ТаблицаДвижений, Истина);
	
	Возврат НовТаблицаДвижений;
	
КонецФункции

Функция СоздатьТаблицуПродажТоваров()
	ТабТоваров = Товары.Выгрузить();
	ТабТоваров.Свернуть("Номенклатура","Количество,Сумма");
	ТабТоваров.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабТоваров.ЗаполнитьЗначения(Контрагент,"Контрагент");
	Возврат ТабТоваров;
КонецФункции

#КонецОбласти

