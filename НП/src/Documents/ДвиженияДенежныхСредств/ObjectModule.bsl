
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Денежные средства
	ТаблицаДС = СоздатьТаблицуДенежныхСредств();
	Если ТаблицаДС.Количество()>0 Тогда
		СформироватьДвиженияПоРегистру(ТаблицаДС, Отказ, "ДенежныеСредства", , ?(ВидОперации = Перечисления.ВидыОперцийДвиженияДенежныхСредств.Приход,"Приход","Расход"));
	КонецЕсли;
	
	//Взаиморасчеты
	Если ВидОперации = Перечисления.ВидыОперцийДвиженияДенежныхСредств.Расход Тогда
		ТаблицаВзаиморасчетов = СоздатьТаблицуДолгаПоДокументам();
		СформироватьДвиженияПоРегистру(ТаблицаВзаиморасчетов, Отказ, "Взаиморасчеты", Истина);
	Иначе
		ТаблицаОплат		  = СоздатьТаблицуОплатПоДокументам();
		СформироватьДвиженияПоРегистру(ТаблицаОплат, Отказ, "Взаиморасчеты", , "Расход");
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьДвиженияПоРегистру(Таблица, Отказ, ИмяРегистра, ПромежуточноЗаписать=Ложь, ВидДвижения = "Приход")

	// ПО РЕГИСТРУ Взаиморасчеты.
	
	НаборДвижений = Движения[ИмяРегистра];
	НаборДвижений.Записывать = Истина;
	
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	// Заполним таблицу движений.
	ОбщегоНазначенияНП.ЗагрузитьВТаблицуЗначений(Таблица, ТаблицаДвижений);
	
	// Недостающие поля.
	НаборДвижений.мПериод            = Дата;
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
	
	Если Не Отказ Тогда
		
		Если ВидДвижения = "Приход" Тогда
			НаборДвижений.ВыполнитьПриход();
		ИначеЕсли ВидДвижения = "Обороты" Тогда
			НаборДвижений.ВыполнитьДвижения();
		Иначе
			НаборДвижений.ВыполнитьРасход();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПромежуточноЗаписать ТОгда
		НаборДвижений.Записать();
	КонецЕсли;
КонецПроцедуры

Функция СоздатьТаблицуДенежныхСредств()
	
	ТаблицаДвижений = Движения.ДенежныеСредства.Выгрузить();
	ТаблицаДвижений.Очистить();
	НовСтр = ТаблицаДвижений.Добавить();
	
	НовСтр.Сумма = Сумма;
	Если НовСтр.Сумма = 0 Тогда
		ТаблицаДвижений.Удалить(НовСтр);
	КонецЕсли;
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция СоздатьТаблицуОплатПоДокументам()
	
	ТаблицаДвижений = Движения.Взаиморасчеты.Выгрузить();
	ТаблицаДвижений.Очистить();
	НовСтр = ТаблицаДвижений.Добавить();
	ЗаполнитьЗначенияСвойств(НовСтр,ЭтотОбъект);
	НовСтр.СуммаВзаиморасчетов = ?(ВидОперации=Перечисления.ВидыОперцийДвиженияДенежныхСредств.Приход,Сумма,0);
	Если НовСтр.СуммаВзаиморасчетов = 0 Тогда
		ТаблицаДвижений.Удалить(НовСтр);
	КонецЕсли;
	
	НовТаблицаДвижений = ДобавленныеФункции.РаспределитьОплатуПоРасчетнымДокументам(Ссылка, ТаблицаДвижений, Истина);
	
	Возврат НовТаблицаДвижений;
	
КонецФункции

Функция СоздатьТаблицуДолгаПоДокументам()
	
	ТаблицаДвижений = Движения.Взаиморасчеты.Выгрузить();
	ТаблицаДвижений.Очистить();
	НовСтр = ТаблицаДвижений.Добавить();
	ЗаполнитьЗначенияСвойств(НовСтр,ЭтотОбъект);
	НовСтр.СуммаВзаиморасчетов = ?(ВидОперации=Перечисления.ВидыОперцийДвиженияДенежныхСредств.Расход,Сумма,0);
	Если НовСтр.СуммаВзаиморасчетов = 0 Тогда
		ТаблицаДвижений.Удалить(НовСтр);
	КонецЕсли;
	
	НовТаблицаДвижений = ДобавленныеФункции.РаспределитьОплатуПоРасчетнымДокументам(Ссылка, ТаблицаДвижений, Ложь);
	
	Возврат НовТаблицаДвижений;
	
КонецФункции
