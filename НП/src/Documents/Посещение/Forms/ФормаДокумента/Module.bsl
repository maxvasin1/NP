


#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаСервереБезКонтекста
Функция ПосещенияБелокПриИзмененииНаСервере(СтруктураПараметровДляОбмена)
	Если ЗначениеЗаполнено(СтруктураПараметровДляОбмена.Номенклатура) И ТипЗнч(СтруктураПараметровДляОбмена.ТипЦен) = Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
		Возврат ДобавленныеФункции.ПолучитьЦенуНоменклатуры(СтруктураПараметровДляОбмена.Дата, СтруктураПараметровДляОбмена.Номенклатура, СтруктураПараметровДляОбмена.ТипЦен);
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПосещенияБелокПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Посещения.ТекущиеДанные;
	ИзменениеКоличествоБелокНаКлиенте(СтрокаТабличнойЧасти);
	РассчитатьСуммуСтрокиДокумента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеКоличествоБелокНаКлиенте(СтрокаТЧ)
	
	ДанныеДляОбменаСсервером = ПолучитьСтруктуруДляОбменаССервером();
	ЗаполнитьЗначенияСвойств(ДанныеДляОбменаСсервером, Объект);
	
	Цена = ПосещенияБелокПриИзмененииНаСервере(ДанныеДляОбменаСсервером);
	Если Цена=Неопределено ИЛИ Цена=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не задана цена ""Стоимость порционного товара"" для продукта ""Белок порционный""!'"), ,"Посещения["+Объект.Посещения.Индекс(СтрокаТЧ)+"].Белок",	"Объект");
	ИначеЕсли Цена <> 0 Тогда
		СтрокаТЧ.СтоимостьБелка = Цена*СтрокаТЧ.Белок;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Странная ошибка при получении цены на ""Белок порционный""'"), ,"Посещения["+Объект.Посещения.Индекс(СтрокаТЧ)+"].Белок",	"Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДляОбменаССервером()
	Возврат Новый Структура("Дата, Номенклатура, ТипЦен",, Справочники.Номенклатура.БелокПорционный, Справочники.ТипыЦенНоменклатуры.СтоимостьПорционногоТовара);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДляОбменаССерверомВидПосещения()
	Возврат Новый Структура("Дата, Номенклатура, ТипЦен",,, Справочники.ТипыЦенНоменклатуры.СтоимостьПорционногоТовара);
КонецФункции

&НаКлиенте
Процедура ПосещенияАбонементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЭтаФорма.Модифицированность Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
		ЭтаФорма.Записать(ПараметрыЗаписи);
	КонецЕсли;	
	ПараметрыФормы = Новый Структура("МоментДокумента,Контрагент,СсылкаНаОбъект");
	ПараметрыФормы.Контрагент = Элементы.Посещения.ТекущиеДанные.Контрагент;
	ПараметрыФормы.СсылкаНаОбъект = ЭтаФорма.Объект.Ссылка;
	ЗаполнитьПараметрыНаСервере(ПараметрыФормы);
	
	ОткрытьФорму("Справочник.АбонементыКонтрагента.Форма.ФормаВыбораСОстатками", ПараметрыФормы, ЭтаФорма,,ВариантОткрытияОкна.ОтдельноеОкно,,Новый ОписаниеОповещения("ПосещенияАбонементПослеВыбора",ЭтотОбъект, Новый Структура),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементПослеВыбора(ЗначениеВыбора, ДополнительныеПараметры) Экспорт
	Если ЗначениеВыбора=Неопределено И ЗначениеЗаполнено(Элементы.Посещения.ТекущиеДанные.Абонемент) Тогда
		Возврат;
	КонецЕсли;
	Элементы.Посещения.ТекущиеДанные.Абонемент=ЗначениеВыбора;
	ПосещенияВидПосещенияПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементОчистка(Элемент, СтандартнаяОбработка)
	ПосещенияВидПосещенияПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементПриИзменении(Элемент)
	ПосещенияВидПосещенияПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыНаСервере(Структура)
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Структура.МоментДокумента = ДокОбъект.МоментВремени();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПосещенияВидПосещенияПриИзмененииНаСервере(СтруктураПараметровДляОбмена)
	Если ЗначениеЗаполнено(СтруктураПараметровДляОбмена.Номенклатура) И ТипЗнч(СтруктураПараметровДляОбмена.ТипЦен) = Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
		Возврат ДобавленныеФункции.ПолучитьЦенуНоменклатуры(СтруктураПараметровДляОбмена.Дата, СтруктураПараметровДляОбмена.Номенклатура, СтруктураПараметровДляОбмена.ТипЦен);
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПосещенияВидПосещенияПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Посещения.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Абонемент) Тогда
		//все из абонемента
		//Обнуляем стоимость посещения, если она была
		СтрокаТабличнойЧасти.СтоимостьПосещения = 0;
		РассчитатьСуммуСтрокиДокумента(СтрокаТабличнойЧасти);
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ВидПосещения) Тогда
		Возврат;
	КонецЕсли;
	ДанныеДляОбменаСсервером = ПолучитьСтруктуруДляОбменаССерверомВидПосещения();
	ДанныеДляОбменаСсервером.Номенклатура = СтрокаТабличнойЧасти.ВидПосещения;
	ЗаполнитьЗначенияСвойств(ДанныеДляОбменаСсервером, Объект);
		
	Цена = ПосещенияВидПосещенияПриИзмененииНаСервере(ДанныеДляОбменаСсервером);
	
	Если Цена=Неопределено ИЛИ Цена=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не задана цена ""Стоимость порционного товара"" для вида посещения """+СтрокаТабличнойЧасти.ВидПосещения+"""!'"), ,"Посещения["+Объект.Посещения.Индекс(СтрокаТабличнойЧасти)+"].ВидПосещения",	"Объект");
	ИначеЕсли Цена <> 0 Тогда
		СтрокаТабличнойЧасти.СтоимостьПосещения = Цена;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Странная ошибка при получении цены на вид посещения """+СтрокаТабличнойЧасти.ВидПосещения+"""'"), ,"Посещения["+Объект.Посещения.Индекс(СтрокаТабличнойЧасти)+"].ВидПосещения",	"Объект");
	КонецЕсли;
	
	РассчитатьСуммуСтрокиДокумента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАбонементОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры



#КонецОбласти



#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КомментарийНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСлужебныеПРоцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтрокиДокумента(СтрокаТЧ)
	СтрокаТЧ.СтоимостьИтог = СтрокаТЧ.СтоимостьПосещения+СтрокаТЧ.СтоимостьБелка;
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущаяСтрока = Элементы.Посещения.ТекущиеДанные;
	Если НоваяСтрока И Копирование Тогда
		ТекущаяСтрока.Абонемент = Неопределено;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти
