


// Рассчитывает сумму в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти - строка табличной части документа,
//  СтруктураПараметров - структура, содержащая сведения о наличии реквизитов таб.части
//  ВидРасчета           - "Со всеми скидками", сумма минус скидки;
//                         "Без учета ручной скидки", сумма минус автоматические скидки;
//                         "Без учета скидок", сумма (Цена * Количество);
//
Процедура РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, СтруктураПараметров = Неопределено) Экспорт

	Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	СуммаСкидки = 0;

	Если СтруктураПараметров <> Неопределено И СтруктураПараметров.Свойство("ЕстьПроцентАвтоматическихСкидок") Тогда
		СуммаСкидки = Сумма * СтрокаТабличнойЧасти.ПроцентАвтоматическихСкидок / 100;
	КонецЕсли;

	Если СтруктураПараметров <> Неопределено И СтруктураПараметров.Свойство("ЕстьПроцентСкидкиНаценки") Тогда
		СуммаСкидки = СуммаСкидки + (Сумма * СтрокаТабличнойЧасти.ПроцентСкидкиНаценки / 100);
	КонецЕсли;

	СтрокаТабличнойЧасти.Сумма = Сумма - СуммаСкидки;
КонецПроцедуры // РассчитатьСуммуТабЧасти()

// Процедура выполняет стандартные действия при изменении суммы 
// в строке табличной части документа.
//
// Параметры:
//  СтрокаТабличнойЧасти 					- строка табличной части документа,
//  ПересчитыватьСкидку				 		- признак необходимости пересчета скидки для данного пользователя,
Процедура ПриИзмененииСуммыТабЧасти(СтрокаТабличнойЧасти, ПересчитыватьСкидкуДокумента = Ложь) Экспорт
	ЕстьРеквизитПроцентСкидкиНаценки = СтрокаТабличнойЧасти.Свойство("ПроцентСкидкиНаценки");
	ЕстьРеквизитПроцентАвтоматическихСкидок = СтрокаТабличнойЧасти.Свойство("ПроцентАвтоматическихСкидок");
	Если СтрокаТабличнойЧасти.Количество=0 Тогда
		СтрокаТабличнойЧасти.Цена = 0;
		Возврат;
	ИначеЕсли НЕ ЕстьРеквизитПроцентСкидкиНаценки Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
		Возврат;
	КонецЕсли;
	//Обработка ситуации когда ЕстьРеквизитПроцентСкидкиНаценки
	ПроцентАвтоматическихСкидок = 0;
	Если ЕстьРеквизитПроцентАвтоматическихСкидок Тогда
		ПроцентАвтоматическихСкидок = СтрокаТабличнойЧасти.ПроцентАвтоматическихСкидок;
	КонецЕсли;
	Если ПересчитыватьСкидкуДокумента Тогда
		Если (СтрокаТабличнойЧасти.Цена = 0) Тогда
			СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = 0;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Цена равна 0, после изменения суммы установлена нулевая скидка!'"));
		Иначе
			СуммаСоСкидками = СтрокаТабличнойЧасти.Сумма;
			СуммаБезСкидок  = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			ПроцентСкидки   = 100 - (СуммаСоСкидками*100)/СуммаБезСкидок;
			СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = ПроцентСкидки - ПроцентАвтоматическихСкидок;
		КонецЕсли;
	Иначе
		ПроцентСкидки = СтрокаТабличнойЧасти.ПроцентСкидкиНаценки + ПроцентАвтоматическихСкидок;
		Если ПроцентСкидки >= 100 Тогда
			СтрокаТабличнойЧасти.Цена = 0;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Скидка больше или равна 100%, после изменения суммы установлена нулевая цена!'"));
		Иначе
			СуммаБезСкидок  = СтрокаТабличнойЧасти.Сумма * 100/
							  (100 - ПроцентСкидки);
			СтрокаТабличнойЧасти.Цена = СуммаБезСкидок / СтрокаТабличнойЧасти.Количество;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСуммыТабЧасти()
