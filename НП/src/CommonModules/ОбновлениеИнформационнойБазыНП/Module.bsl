// Заполняет основные сведения о библиотеке или основной конфигурации.
// Библиотека, имя которой имя совпадает с именем конфигурации в метаданных, определяется как основная конфигурация.
// Параметры:
//  Описание - Структура - сведения о библиотеке:
//   Имя                 - Строка - имя библиотеки, например, "СтандартныеПодсистемы".
//   Версия              - Строка - версия в формате из 4-х цифр, например, "2.1.3.6".
//   ТребуемыеПодсистемы - Массив - имена других библиотек (Строка), от которых зависит данная библиотека.
//                                  Обработчики обновления таких библиотек должны быть вызваны ранее
//                                  обработчиков обновления данной библиотеки.
//                                  При циклических зависимостях или, напротив, отсутствии каких-либо зависимостей,
//                                  порядок вызова обработчиков обновления определяется порядком добавления модулей
//                                  в процедуре ПриДобавленииПодсистем общего модуля ПодсистемыКонфигурацииПереопределяемый.
//
Процедура ПриДобавленииПодсистемы(Описание) Экспорт
    Описание.Имя = "НезависимыйПартнер";
    Описание.Версия = "1.0.0.1";
    // Требуется библиотека стандартных подсистем.
    Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
КонецПроцедуры

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
// Параметры:
//  Обработчики - ТаблицаЗначений - описание полей
//                                  см. в процедуре ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.0.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//  Обработчик.Опциональный        = Истина;
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "1.0.0.1";
	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыНП.КонтактнаяИнформацияОбновлениеИБ";
	Обработчик.МонопольныйРежим    = Ложь;
	Обработчик.Опциональный        = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "1.0.0.1";
	Обработчик.Процедура           = "ОбновлениеИнформационнойБазыНП.ДопРеквизитыИнформацияОбновлениеИБ";
	Обработчик.МонопольныйРежим    = Ложь;
	Обработчик.Опциональный        = Истина;
	
КонецПроцедуры
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
КонецПроцедуры
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
        Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
КонецПроцедуры
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
КонецПроцедуры
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
КонецПроцедуры
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
КонецПроцедуры 
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
КонецПроцедуры


// Процедура обновления ИБ для справочника видов контактной информации
Процедура КонтактнаяИнформацияОбновлениеИБ() Экспорт
    // Справочник "Контрагенты"
    ПараметрыВида = УправлениеКонтактнойИнформацией.ПараметрыВидаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес);
    ПараметрыВида.Вид = Справочники.ВидыКонтактнойИнформации.АдресКонтрагента;
    ПараметрыВида.Используется = Истина;
    ПараметрыВида.МожноИзменятьСпособРедактирования = Истина;
    ПараметрыВида.Порядок = 1;
    ПараметрыВида.НастройкиПроверки.АдресТолькоРоссийский = Ложь;
    ПараметрыВида.НастройкиПроверки.ПроверятьКорректность = Ложь;
    ПараметрыВида.НастройкиПроверки.ПроверятьПоФИАС = Ложь;
    УправлениеКонтактнойИнформацией.УстановитьСвойстваВидаКонтактнойИнформации(ПараметрыВида);
КонецПроцедуры

Процедура ДопРеквизитыИнформацияОбновлениеИБ() Экспорт
	
	УправлениеСвойствами.ОбновитьНаименованияНаборовИСвойств();
	
	Параметры = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Контрагенты", Параметры);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_Номенклатура", Параметры);
КонецПроцедуры
